/* ICat4ICATPortBindingProxy.h
   Generated by gSOAP 2.8.15 from ICat4Service.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef ICat4ICATPortBindingProxy_H
#define ICat4ICATPortBindingProxy_H
#include "ICat4H.h"

namespace ICat4 {

class SOAP_CMAC ICATPortBindingProxy : public soap
{ public:
	/// Endpoint URL of service 'ICATPortBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	ICATPortBindingProxy();
	/// Construct from another engine state
	ICATPortBindingProxy(const struct soap&);
	/// Constructor with endpoint URL
	ICATPortBindingProxy(const char *url);
	/// Constructor with engine input+output mode control
	ICATPortBindingProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	ICATPortBindingProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	ICATPortBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~ICATPortBindingProxy();
	/// Initializer used by constructors
	virtual	void ICATPortBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'getUserName' (returns error code or SOAP_OK)
	virtual	int getUserName(ns1__getUserName *ns1__getUserName_, ns1__getUserNameResponse *ns1__getUserNameResponse_) { return this->getUserName(NULL, NULL, ns1__getUserName_, ns1__getUserNameResponse_); }
	virtual	int getUserName(const char *endpoint, const char *soap_action, ns1__getUserName *ns1__getUserName_, ns1__getUserNameResponse *ns1__getUserNameResponse_);

	/// Web service operation 'login' (returns error code or SOAP_OK)
	virtual	int login(ns1__login *ns1__login_, ns1__loginResponse *ns1__loginResponse_) { return this->login(NULL, NULL, ns1__login_, ns1__loginResponse_); }
	virtual	int login(const char *endpoint, const char *soap_action, ns1__login *ns1__login_, ns1__loginResponse *ns1__loginResponse_);

	/// Web service operation 'get' (returns error code or SOAP_OK)
	virtual	int get(ns1__get *ns1__get_, ns1__getResponse *ns1__getResponse_) { return this->get(NULL, NULL, ns1__get_, ns1__getResponse_); }
	virtual	int get(const char *endpoint, const char *soap_action, ns1__get *ns1__get_, ns1__getResponse *ns1__getResponse_);

	/// Web service operation 'delete' (returns error code or SOAP_OK)
	virtual	int delete_(ns1__delete *ns1__delete_, ns1__deleteResponse *ns1__deleteResponse_) { return this->delete_(NULL, NULL, ns1__delete_, ns1__deleteResponse_); }
	virtual	int delete_(const char *endpoint, const char *soap_action, ns1__delete *ns1__delete_, ns1__deleteResponse *ns1__deleteResponse_);

	/// Web service operation 'search' (returns error code or SOAP_OK)
	virtual	int search(ns1__search *ns1__search_, ns1__searchResponse *ns1__searchResponse_) { return this->search(NULL, NULL, ns1__search_, ns1__searchResponse_); }
	virtual	int search(const char *endpoint, const char *soap_action, ns1__search *ns1__search_, ns1__searchResponse *ns1__searchResponse_);

	/// Web service operation 'create' (returns error code or SOAP_OK)
	virtual	int create(ns1__create *ns1__create_, ns1__createResponse *ns1__createResponse_) { return this->create(NULL, NULL, ns1__create_, ns1__createResponse_); }
	virtual	int create(const char *endpoint, const char *soap_action, ns1__create *ns1__create_, ns1__createResponse *ns1__createResponse_);

	/// Web service operation 'update' (returns error code or SOAP_OK)
	virtual	int update(ns1__update *ns1__update_, ns1__updateResponse *ns1__updateResponse_) { return this->update(NULL, NULL, ns1__update_, ns1__updateResponse_); }
	virtual	int update(const char *endpoint, const char *soap_action, ns1__update *ns1__update_, ns1__updateResponse *ns1__updateResponse_);

	/// Web service operation 'dummy' (returns error code or SOAP_OK)
	virtual	int dummy(ns1__dummy *ns1__dummy_, ns1__dummyResponse *ns1__dummyResponse_) { return this->dummy(NULL, NULL, ns1__dummy_, ns1__dummyResponse_); }
	virtual	int dummy(const char *endpoint, const char *soap_action, ns1__dummy *ns1__dummy_, ns1__dummyResponse *ns1__dummyResponse_);

	/// Web service operation 'logout' (returns error code or SOAP_OK)
	virtual	int logout(ns1__logout *ns1__logout_, ns1__logoutResponse *ns1__logoutResponse_) { return this->logout(NULL, NULL, ns1__logout_, ns1__logoutResponse_); }
	virtual	int logout(const char *endpoint, const char *soap_action, ns1__logout *ns1__logout_, ns1__logoutResponse *ns1__logoutResponse_);

	/// Web service operation 'deleteMany' (returns error code or SOAP_OK)
	virtual	int deleteMany(ns1__deleteMany *ns1__deleteMany_, ns1__deleteManyResponse *ns1__deleteManyResponse_) { return this->deleteMany(NULL, NULL, ns1__deleteMany_, ns1__deleteManyResponse_); }
	virtual	int deleteMany(const char *endpoint, const char *soap_action, ns1__deleteMany *ns1__deleteMany_, ns1__deleteManyResponse *ns1__deleteManyResponse_);

	/// Web service operation 'getEntityInfo' (returns error code or SOAP_OK)
	virtual	int getEntityInfo(ns1__getEntityInfo *ns1__getEntityInfo_, ns1__getEntityInfoResponse *ns1__getEntityInfoResponse_) { return this->getEntityInfo(NULL, NULL, ns1__getEntityInfo_, ns1__getEntityInfoResponse_); }
	virtual	int getEntityInfo(const char *endpoint, const char *soap_action, ns1__getEntityInfo *ns1__getEntityInfo_, ns1__getEntityInfoResponse *ns1__getEntityInfoResponse_);

	/// Web service operation 'getRemainingMinutes' (returns error code or SOAP_OK)
	virtual	int getRemainingMinutes(ns1__getRemainingMinutes *ns1__getRemainingMinutes_, ns1__getRemainingMinutesResponse *ns1__getRemainingMinutesResponse_) { return this->getRemainingMinutes(NULL, NULL, ns1__getRemainingMinutes_, ns1__getRemainingMinutesResponse_); }
	virtual	int getRemainingMinutes(const char *endpoint, const char *soap_action, ns1__getRemainingMinutes *ns1__getRemainingMinutes_, ns1__getRemainingMinutesResponse *ns1__getRemainingMinutesResponse_);

	/// Web service operation 'getApiVersion' (returns error code or SOAP_OK)
	virtual	int getApiVersion(ns1__getApiVersion *ns1__getApiVersion_, ns1__getApiVersionResponse *ns1__getApiVersionResponse_) { return this->getApiVersion(NULL, NULL, ns1__getApiVersion_, ns1__getApiVersionResponse_); }
	virtual	int getApiVersion(const char *endpoint, const char *soap_action, ns1__getApiVersion *ns1__getApiVersion_, ns1__getApiVersionResponse *ns1__getApiVersionResponse_);

	/// Web service operation 'createMany' (returns error code or SOAP_OK)
	virtual	int createMany(ns1__createMany *ns1__createMany_, ns1__createManyResponse *ns1__createManyResponse_) { return this->createMany(NULL, NULL, ns1__createMany_, ns1__createManyResponse_); }
	virtual	int createMany(const char *endpoint, const char *soap_action, ns1__createMany *ns1__createMany_, ns1__createManyResponse *ns1__createManyResponse_);
};

} // namespace ICat4

#endif
